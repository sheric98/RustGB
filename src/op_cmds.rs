// Note: This file is generated. Check raw_commands/cmd_gen.py

use crate::cmd::*;
use crate::cpu::{Flag, Reg};
use crate::motherboard::Motherboard;

use std::collections::HashMap;

type OpInp = (Option<u8>, u8);
type CmdFns = fn(&mut Motherboard) -> u8;

pub struct OpCmds {
    op_map: HashMap<u16, CmdFns>,
}

impl OpCmds {
    pub fn new() -> Self {
        let mut op_map: HashMap<u16, CmdFns> = HashMap::new();
        op_map.insert(6, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0), CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(14, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0), CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(22, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0), CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(30, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0), CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(38, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0), CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(46, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0), CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(127, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(120, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(121, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(122, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(123, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(124, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(125, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(126, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(64, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(65, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(66, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(67, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(68, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(69, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(70, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(72, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(73, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(74, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(75, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(76, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(77, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(78, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(80, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(81, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(82, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(83, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(84, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(85, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(86, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(88, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(89, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(90, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(91, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(92, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(93, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(94, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(96, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(97, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(98, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(99, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(100, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(101, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(102, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(104, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(105, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(106, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(107, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(108, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(109, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(110, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(112, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(113, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(114, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(115, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(116, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(117, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(54, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0), CmdInp::new(RegExt::N, false, 0)); return 12;});
        op_map.insert(10, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::BC), true, 0)); return 8;});
        op_map.insert(26, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::DE), true, 0)); return 8;});
        op_map.insert(250, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::NN, true, 0)); return 16;});
        op_map.insert(62, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(71, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(79, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(87, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(95, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(103, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(111, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(2, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::BC), true, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(18, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::DE), true, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(119, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(234, |mother| {ld(mother, CmdInp::new(RegExt::NN, true, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 16;});
        op_map.insert(242, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::C), true, 65280)); return 8;});
        op_map.insert(226, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::C), true, 65280), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(58, |mother| {ldd(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(50, |mother| {ldd(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(42, |mother| {ldi(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(34, |mother| {ldi(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(224, |mother| {ld(mother, CmdInp::new(RegExt::N, true, 65280), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 12;});
        op_map.insert(240, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::N, true, 65280)); return 12;});
        op_map.insert(1, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::BC), false, 0), CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(17, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::DE), false, 0), CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(33, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::HL), false, 0), CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(49, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::SP), false, 0), CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(249, |mother| {ld(mother, CmdInp::new(RegExt::Reg(Reg::SP), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), false, 0)); return 8;});
        op_map.insert(248, |mother| {ldhl(mother, CmdInp::new(RegExt::Reg(Reg::SP), false, 0), CmdInp::new(RegExt::N, false, 0)); return 12;});
        op_map.insert(8, |mother| {ld(mother, CmdInp::new(RegExt::NN, true, 0), CmdInp::new(RegExt::Reg(Reg::SP), false, 0)); return 20;});
        op_map.insert(245, |mother| {push(mother, CmdInp::new(RegExt::Reg(Reg::AF), false, 0)); return 16;});
        op_map.insert(197, |mother| {push(mother, CmdInp::new(RegExt::Reg(Reg::BC), false, 0)); return 16;});
        op_map.insert(213, |mother| {push(mother, CmdInp::new(RegExt::Reg(Reg::DE), false, 0)); return 16;});
        op_map.insert(229, |mother| {push(mother, CmdInp::new(RegExt::Reg(Reg::HL), false, 0)); return 16;});
        op_map.insert(241, |mother| {pop(mother, CmdInp::new(RegExt::Reg(Reg::AF), false, 0)); return 12;});
        op_map.insert(193, |mother| {pop(mother, CmdInp::new(RegExt::Reg(Reg::BC), false, 0)); return 12;});
        op_map.insert(209, |mother| {pop(mother, CmdInp::new(RegExt::Reg(Reg::DE), false, 0)); return 12;});
        op_map.insert(225, |mother| {pop(mother, CmdInp::new(RegExt::Reg(Reg::HL), false, 0)); return 12;});
        op_map.insert(135, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(128, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(129, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(130, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(131, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(132, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(133, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(134, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(198, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(143, |mother| {adc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(136, |mother| {adc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(137, |mother| {adc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(138, |mother| {adc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(139, |mother| {adc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(140, |mother| {adc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(141, |mother| {adc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(142, |mother| {adc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(206, |mother| {adc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(151, |mother| {sub(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(144, |mother| {sub(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(145, |mother| {sub(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(146, |mother| {sub(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(147, |mother| {sub(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(148, |mother| {sub(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(149, |mother| {sub(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(150, |mother| {sub(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(214, |mother| {sub(mother, CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(15, |mother| {rrca(mother); return 4;});
        op_map.insert(152, |mother| {sbc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(153, |mother| {sbc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(154, |mother| {sbc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(11, |mother| {dec(mother, CmdInp::new(RegExt::Reg(Reg::BC), false, 0)); return 8;});
        op_map.insert(156, |mother| {sbc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(157, |mother| {sbc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(158, |mother| {sbc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(167, |mother| {and(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(160, |mother| {and(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(161, |mother| {and(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(162, |mother| {and(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(163, |mother| {and(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(164, |mother| {and(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(165, |mother| {and(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(166, |mother| {and(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(230, |mother| {and(mother, CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(183, |mother| {or(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(176, |mother| {or(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(177, |mother| {or(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(178, |mother| {or(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(179, |mother| {or(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(180, |mother| {or(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(181, |mother| {or(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(182, |mother| {or(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(246, |mother| {or(mother, CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(175, |mother| {xor(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(168, |mother| {xor(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(169, |mother| {xor(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(170, |mother| {xor(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(171, |mother| {xor(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(172, |mother| {xor(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(173, |mother| {xor(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(174, |mother| {xor(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 8;});
        op_map.insert(238, |mother| {xor(mother, CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(191, |mother| {cp(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(184, |mother| {cp(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(185, |mother| {cp(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(186, |mother| {cp(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(187, |mother| {cp(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(188, |mother| {cp(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(189, |mother| {cp(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(254, |mother| {cp(mother, CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(60, |mother| {inc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(4, |mother| {inc(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(12, |mother| {inc(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(20, |mother| {inc(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(28, |mother| {inc(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(36, |mother| {inc(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(44, |mother| {inc(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(52, |mother| {inc(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 12;});
        op_map.insert(61, |mother| {dec(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 4;});
        op_map.insert(5, |mother| {dec(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 4;});
        op_map.insert(13, |mother| {dec(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 4;});
        op_map.insert(21, |mother| {dec(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 4;});
        op_map.insert(29, |mother| {dec(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 4;});
        op_map.insert(37, |mother| {dec(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 4;});
        op_map.insert(45, |mother| {dec(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 4;});
        op_map.insert(53, |mother| {dec(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 12;});
        op_map.insert(9, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::HL), false, 0), CmdInp::new(RegExt::Reg(Reg::BC), false, 0)); return 8;});
        op_map.insert(25, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::HL), false, 0), CmdInp::new(RegExt::Reg(Reg::DE), false, 0)); return 8;});
        op_map.insert(41, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::HL), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), false, 0)); return 8;});
        op_map.insert(57, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::HL), false, 0), CmdInp::new(RegExt::Reg(Reg::SP), false, 0)); return 8;});
        op_map.insert(232, |mother| {add(mother, CmdInp::new(RegExt::Reg(Reg::SP), false, 0), CmdInp::new(RegExt::N, false, 0)); return 16;});
        op_map.insert(3, |mother| {inc(mother, CmdInp::new(RegExt::Reg(Reg::BC), false, 0)); return 8;});
        op_map.insert(19, |mother| {inc(mother, CmdInp::new(RegExt::Reg(Reg::DE), false, 0)); return 8;});
        op_map.insert(35, |mother| {inc(mother, CmdInp::new(RegExt::Reg(Reg::HL), false, 0)); return 8;});
        op_map.insert(51, |mother| {inc(mother, CmdInp::new(RegExt::Reg(Reg::SP), false, 0)); return 8;});
        op_map.insert(27, |mother| {dec(mother, CmdInp::new(RegExt::Reg(Reg::DE), false, 0)); return 8;});
        op_map.insert(43, |mother| {dec(mother, CmdInp::new(RegExt::Reg(Reg::HL), false, 0)); return 8;});
        op_map.insert(59, |mother| {dec(mother, CmdInp::new(RegExt::Reg(Reg::SP), false, 0)); return 8;});
        op_map.insert(311, |mother| {swap(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(304, |mother| {swap(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(305, |mother| {swap(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(306, |mother| {swap(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(307, |mother| {swap(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(308, |mother| {swap(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(309, |mother| {swap(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(310, |mother| {swap(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(39, |mother| {daa(mother); return 4;});
        op_map.insert(47, |mother| {cpl(mother); return 4;});
        op_map.insert(63, |mother| {ccf(mother); return 4;});
        op_map.insert(55, |mother| {scf(mother); return 4;});
        op_map.insert(0, |mother| {nop(mother); return 4;});
        op_map.insert(118, |mother| {halt(mother); return 4;});
        op_map.insert(16, |mother| {stop(mother); return 4;});
        op_map.insert(243, |mother| {di(mother); return 4;});
        op_map.insert(251, |mother| {ei(mother); return 4;});
        op_map.insert(7, |mother| {rlca(mother); return 4;});
        op_map.insert(23, |mother| {rla(mother); return 4;});
        op_map.insert(31, |mother| {rra(mother); return 4;});
        op_map.insert(263, |mother| {rlc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(256, |mother| {rlc(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(257, |mother| {rlc(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(258, |mother| {rlc(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(259, |mother| {rlc(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(260, |mother| {rlc(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(261, |mother| {rlc(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(262, |mother| {rlc(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(279, |mother| {rl(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(272, |mother| {rl(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(273, |mother| {rl(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(274, |mother| {rl(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(275, |mother| {rl(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(276, |mother| {rl(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(277, |mother| {rl(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(278, |mother| {rl(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(271, |mother| {rrc(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(264, |mother| {rrc(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(265, |mother| {rrc(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(266, |mother| {rrc(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(267, |mother| {rrc(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(268, |mother| {rrc(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(269, |mother| {rrc(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(270, |mother| {rrc(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(287, |mother| {rr(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(280, |mother| {rr(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(281, |mother| {rr(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(282, |mother| {rr(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(283, |mother| {rr(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(284, |mother| {rr(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(285, |mother| {rr(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(286, |mother| {rr(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(295, |mother| {sla(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(288, |mother| {sla(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(289, |mother| {sla(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(290, |mother| {sla(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(291, |mother| {sla(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(292, |mother| {sla(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(293, |mother| {sla(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(294, |mother| {sla(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(303, |mother| {sra(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(296, |mother| {sra(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(297, |mother| {sra(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(298, |mother| {sra(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(299, |mother| {sra(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(300, |mother| {sra(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(301, |mother| {sra(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(302, |mother| {sra(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(319, |mother| {srl(mother, CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(312, |mother| {srl(mother, CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(313, |mother| {srl(mother, CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(314, |mother| {srl(mother, CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(315, |mother| {srl(mother, CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(316, |mother| {srl(mother, CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(317, |mother| {srl(mother, CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(318, |mother| {srl(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(195, |mother| {jp(mother, CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(194, |mother| {jp_flag(mother, CmdInp::new(RegExt::NFlag(Flag::Z), false, 0), CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(202, |mother| {jp_flag(mother, CmdInp::new(RegExt::Flag(Flag::Z), false, 0), CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(210, |mother| {jp_flag(mother, CmdInp::new(RegExt::NFlag(Flag::C), false, 0), CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(218, |mother| {jp_flag(mother, CmdInp::new(RegExt::Flag(Flag::C), false, 0), CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(233, |mother| {jp(mother, CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 4;});
        op_map.insert(24, |mother| {jr(mother, CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(32, |mother| {jr_flag(mother, CmdInp::new(RegExt::NFlag(Flag::Z), false, 0), CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(40, |mother| {jr_flag(mother, CmdInp::new(RegExt::Flag(Flag::Z), false, 0), CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(48, |mother| {jr_flag(mother, CmdInp::new(RegExt::NFlag(Flag::C), false, 0), CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(56, |mother| {jr_flag(mother, CmdInp::new(RegExt::Flag(Flag::C), false, 0), CmdInp::new(RegExt::N, false, 0)); return 8;});
        op_map.insert(205, |mother| {call(mother, CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(196, |mother| {call_flag(mother, CmdInp::new(RegExt::NFlag(Flag::Z), false, 0), CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(204, |mother| {call_flag(mother, CmdInp::new(RegExt::Flag(Flag::Z), false, 0), CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(212, |mother| {call_flag(mother, CmdInp::new(RegExt::NFlag(Flag::C), false, 0), CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(220, |mother| {call_flag(mother, CmdInp::new(RegExt::Flag(Flag::C), false, 0), CmdInp::new(RegExt::NN, false, 0)); return 12;});
        op_map.insert(199, |mother| {rst(mother, CmdInp::new(RegExt::H(0), false, 0)); return 32;});
        op_map.insert(207, |mother| {rst(mother, CmdInp::new(RegExt::H(8), false, 0)); return 32;});
        op_map.insert(215, |mother| {rst(mother, CmdInp::new(RegExt::H(16), false, 0)); return 32;});
        op_map.insert(223, |mother| {rst(mother, CmdInp::new(RegExt::H(24), false, 0)); return 32;});
        op_map.insert(231, |mother| {rst(mother, CmdInp::new(RegExt::H(32), false, 0)); return 32;});
        op_map.insert(239, |mother| {rst(mother, CmdInp::new(RegExt::H(40), false, 0)); return 32;});
        op_map.insert(247, |mother| {rst(mother, CmdInp::new(RegExt::H(48), false, 0)); return 32;});
        op_map.insert(255, |mother| {rst(mother, CmdInp::new(RegExt::H(56), false, 0)); return 32;});
        op_map.insert(201, |mother| {ret(mother); return 8;});
        op_map.insert(192, |mother| {ret_flag(mother, CmdInp::new(RegExt::NFlag(Flag::Z), false, 0)); return 8;});
        op_map.insert(200, |mother| {ret_flag(mother, CmdInp::new(RegExt::Flag(Flag::Z), false, 0)); return 8;});
        op_map.insert(208, |mother| {ret_flag(mother, CmdInp::new(RegExt::NFlag(Flag::C), false, 0)); return 8;});
        op_map.insert(216, |mother| {ret_flag(mother, CmdInp::new(RegExt::Flag(Flag::C), false, 0)); return 8;});
        op_map.insert(217, |mother| {reti(mother); return 8;});
        op_map.insert(327, |mother| {bit(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(335, |mother| {bit(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(343, |mother| {bit(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(351, |mother| {bit(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(359, |mother| {bit(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(367, |mother| {bit(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(375, |mother| {bit(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(383, |mother| {bit(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(320, |mother| {bit(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(328, |mother| {bit(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(336, |mother| {bit(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(344, |mother| {bit(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(352, |mother| {bit(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(360, |mother| {bit(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(368, |mother| {bit(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(376, |mother| {bit(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(321, |mother| {bit(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(329, |mother| {bit(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(337, |mother| {bit(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(345, |mother| {bit(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(353, |mother| {bit(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(361, |mother| {bit(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(369, |mother| {bit(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(377, |mother| {bit(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(322, |mother| {bit(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(330, |mother| {bit(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(338, |mother| {bit(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(346, |mother| {bit(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(354, |mother| {bit(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(362, |mother| {bit(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(370, |mother| {bit(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(378, |mother| {bit(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(323, |mother| {bit(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(331, |mother| {bit(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(339, |mother| {bit(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(347, |mother| {bit(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(355, |mother| {bit(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(363, |mother| {bit(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(371, |mother| {bit(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(379, |mother| {bit(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(324, |mother| {bit(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(332, |mother| {bit(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(340, |mother| {bit(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(348, |mother| {bit(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(356, |mother| {bit(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(364, |mother| {bit(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(372, |mother| {bit(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(380, |mother| {bit(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(325, |mother| {bit(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(333, |mother| {bit(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(341, |mother| {bit(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(349, |mother| {bit(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(357, |mother| {bit(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(365, |mother| {bit(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(373, |mother| {bit(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(381, |mother| {bit(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(326, |mother| {bit(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(334, |mother| {bit(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(342, |mother| {bit(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(350, |mother| {bit(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(358, |mother| {bit(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(366, |mother| {bit(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(374, |mother| {bit(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(382, |mother| {bit(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(455, |mother| {set(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(463, |mother| {set(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(471, |mother| {set(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(479, |mother| {set(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(487, |mother| {set(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(495, |mother| {set(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(503, |mother| {set(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(511, |mother| {set(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(448, |mother| {set(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(456, |mother| {set(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(464, |mother| {set(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(472, |mother| {set(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(480, |mother| {set(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(488, |mother| {set(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(496, |mother| {set(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(504, |mother| {set(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(449, |mother| {set(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(457, |mother| {set(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(465, |mother| {set(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(473, |mother| {set(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(481, |mother| {set(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(489, |mother| {set(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(497, |mother| {set(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(505, |mother| {set(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(450, |mother| {set(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(458, |mother| {set(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(466, |mother| {set(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(474, |mother| {set(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(482, |mother| {set(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(490, |mother| {set(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(498, |mother| {set(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(506, |mother| {set(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(451, |mother| {set(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(459, |mother| {set(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(467, |mother| {set(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(475, |mother| {set(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(483, |mother| {set(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(491, |mother| {set(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(499, |mother| {set(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(507, |mother| {set(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(452, |mother| {set(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(460, |mother| {set(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(468, |mother| {set(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(476, |mother| {set(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(484, |mother| {set(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(492, |mother| {set(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(500, |mother| {set(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(508, |mother| {set(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(453, |mother| {set(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(461, |mother| {set(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(469, |mother| {set(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(477, |mother| {set(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(485, |mother| {set(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(493, |mother| {set(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(501, |mother| {set(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(509, |mother| {set(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(454, |mother| {set(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(462, |mother| {set(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(470, |mother| {set(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(478, |mother| {set(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(486, |mother| {set(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(494, |mother| {set(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(502, |mother| {set(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(510, |mother| {set(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(391, |mother| {res(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(399, |mother| {res(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(407, |mother| {res(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(415, |mother| {res(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(423, |mother| {res(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(431, |mother| {res(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(439, |mother| {res(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(447, |mother| {res(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::A), false, 0)); return 8;});
        op_map.insert(384, |mother| {res(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(392, |mother| {res(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(400, |mother| {res(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(408, |mother| {res(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(416, |mother| {res(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(424, |mother| {res(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(432, |mother| {res(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(440, |mother| {res(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::B), false, 0)); return 8;});
        op_map.insert(385, |mother| {res(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(393, |mother| {res(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(401, |mother| {res(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(409, |mother| {res(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(417, |mother| {res(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(425, |mother| {res(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(433, |mother| {res(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(441, |mother| {res(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::C), false, 0)); return 8;});
        op_map.insert(386, |mother| {res(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(394, |mother| {res(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(402, |mother| {res(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(410, |mother| {res(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(418, |mother| {res(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(426, |mother| {res(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(434, |mother| {res(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(442, |mother| {res(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::D), false, 0)); return 8;});
        op_map.insert(387, |mother| {res(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(395, |mother| {res(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(403, |mother| {res(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(411, |mother| {res(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(419, |mother| {res(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(427, |mother| {res(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(435, |mother| {res(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(443, |mother| {res(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::E), false, 0)); return 8;});
        op_map.insert(388, |mother| {res(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(396, |mother| {res(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(404, |mother| {res(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(412, |mother| {res(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(420, |mother| {res(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(428, |mother| {res(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(436, |mother| {res(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(444, |mother| {res(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::H), false, 0)); return 8;});
        op_map.insert(389, |mother| {res(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(397, |mother| {res(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(405, |mother| {res(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(413, |mother| {res(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(421, |mother| {res(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(429, |mother| {res(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(437, |mother| {res(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(445, |mother| {res(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::L), false, 0)); return 8;});
        op_map.insert(390, |mother| {res(mother, CmdInp::new(RegExt::B(0), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(398, |mother| {res(mother, CmdInp::new(RegExt::B(1), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(406, |mother| {res(mother, CmdInp::new(RegExt::B(2), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(414, |mother| {res(mother, CmdInp::new(RegExt::B(3), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(422, |mother| {res(mother, CmdInp::new(RegExt::B(4), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(430, |mother| {res(mother, CmdInp::new(RegExt::B(5), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(438, |mother| {res(mother, CmdInp::new(RegExt::B(6), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        op_map.insert(446, |mother| {res(mother, CmdInp::new(RegExt::B(7), false, 0), CmdInp::new(RegExt::Reg(Reg::HL), true, 0)); return 16;});
        Self {
            op_map,
        }
    }

    pub fn exe_op(&self, mother: &mut Motherboard, op: u16) -> u8 {
        self.op_map.get(&op).unwrap()(mother)
    }
}
